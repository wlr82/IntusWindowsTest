// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DAL.Entities.ElementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("ElementTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Window"
                        },
                        new
                        {
                            Id = 2,
                            Code = "Doors"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "New York Building 1",
                            StateId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "California Hotel AJK",
                            StateId = 2
                        });
                });

            modelBuilder.Entity("DAL.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("States", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "NY"
                        },
                        new
                        {
                            Id = 2,
                            Code = "CA"
                        });
                });

            modelBuilder.Entity("DAL.Entities.SubElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Element")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ElementTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("WindowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ElementTypeId");

                    b.HasIndex("WindowId");

                    b.ToTable("SubElements", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Element = "1",
                            ElementTypeId = 2,
                            Height = 1850,
                            Width = 1200,
                            WindowId = 1
                        },
                        new
                        {
                            Id = 2,
                            Element = "2",
                            ElementTypeId = 1,
                            Height = 1850,
                            Width = 800,
                            WindowId = 1
                        },
                        new
                        {
                            Id = 3,
                            Element = "3",
                            ElementTypeId = 1,
                            Height = 1850,
                            Width = 700,
                            WindowId = 1
                        },
                        new
                        {
                            Id = 4,
                            Element = "1",
                            ElementTypeId = 1,
                            Height = 2000,
                            Width = 1500,
                            WindowId = 2
                        },
                        new
                        {
                            Id = 5,
                            Element = "1",
                            ElementTypeId = 2,
                            Height = 2200,
                            Width = 1400,
                            WindowId = 3
                        },
                        new
                        {
                            Id = 6,
                            Element = "2",
                            ElementTypeId = 1,
                            Height = 2200,
                            Width = 600,
                            WindowId = 3
                        },
                        new
                        {
                            Id = 7,
                            Element = "1",
                            ElementTypeId = 1,
                            Height = 2000,
                            Width = 1500,
                            WindowId = 4
                        },
                        new
                        {
                            Id = 8,
                            Element = "1",
                            ElementTypeId = 1,
                            Height = 2000,
                            Width = 1500,
                            WindowId = 4
                        });
                });

            modelBuilder.Entity("DAL.Entities.Window", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityOfWindows")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Windows", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A51",
                            OrderId = 1,
                            QuantityOfWindows = 4
                        },
                        new
                        {
                            Id = 2,
                            Name = "C Zone 5",
                            OrderId = 1,
                            QuantityOfWindows = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "GLB",
                            OrderId = 2,
                            QuantityOfWindows = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "OHF",
                            OrderId = 2,
                            QuantityOfWindows = 10
                        });
                });

            modelBuilder.Entity("DAL.Entities.Order", b =>
                {
                    b.HasOne("DAL.Entities.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("DAL.Entities.SubElement", b =>
                {
                    b.HasOne("DAL.Entities.ElementType", "ElementType")
                        .WithMany()
                        .HasForeignKey("ElementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Window", "Window")
                        .WithMany("SubElements")
                        .HasForeignKey("WindowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElementType");

                    b.Navigation("Window");
                });

            modelBuilder.Entity("DAL.Entities.Window", b =>
                {
                    b.HasOne("DAL.Entities.Order", "Order")
                        .WithMany("Windows")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DAL.Entities.Order", b =>
                {
                    b.Navigation("Windows");
                });

            modelBuilder.Entity("DAL.Entities.Window", b =>
                {
                    b.Navigation("SubElements");
                });
#pragma warning restore 612, 618
        }
    }
}
